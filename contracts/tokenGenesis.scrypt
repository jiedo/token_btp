import "util.scrypt";
import "tokenProto.scrypt";

contract tokenGenesis {
    PubKey pubKey;
    bytes tokenName;
    bytes contractHash;

    public function unlock(
        SigHashPreimage txPreimage,
        Sig sig,
        bytes outputScript,
        int outputSatoshi
        ) {

        SigHashType sigHashType = SigHash.SINGLE | SigHash.FORKID;
        //TODO: use opt
        require(Util.checkPreimageSigHashType(txPreimage, sigHashType));

        // check sig
        require(checkSig(sig, this.pubKey));

        // check input script oracle data
        bytes data = Util.scriptCode(txPreimage);
        int dataLen = len(data);
        bytes tokenName = TokenProto.getTokenName(data, dataLen);
        require(tokenName == this.tokenName);
        int isGenesis = TokenProto.getGenesisFlag(data, dataLen);
        require(isGenesis == 1);
        bytes address = TokenProto.getTokenAddress(data, dataLen);
        require(address == b'0000000000000000000000000000000000000000');
        int tokenValue = TokenProto.getTokenValue(data, dataLen);
        require(tokenValue == 0);
        bytes tokenID = TokenProto.getTokenID(data, dataLen);
        require(tokenID == b'0000000000000000000000000000000000000000');
        int protoType = TokenProto.getProtoType(data, dataLen);
        require(protoType ==  1);
        // flag == 'oraclesv'
        bytes flag = TokenProto.getProtoFlag(data, dataLen);
        require(flag == b'6f7261636c657376');

        bytes genesisHash = hash160(data);

        // check outputScript oracle data
        dataLen = len(outputScript);

        // check hash
        bytes contractCode = TokenProto.getContractCode(outputScript, dataLen);
        bytes contractHash = hash160(contractCode);
        require(contractHash == this.contractHash);

        bytes contractHash2 = TokenProto.getContractHash(outputScript, dataLen);
        require(contractHash2 == this.contractHash);
        tokenName = TokenProto.getTokenName(outputScript, dataLen);
        require(tokenName == this.tokenName);
        isGenesis = TokenProto.getGenesisFlag(outputScript, dataLen);
        require(isGenesis == 0);
        tokenID = TokenProto.getTokenID(outputScript, dataLen);
        require(tokenID == genesisHash);
        protoType = TokenProto.getProtoType(outputScript, dataLen);
        require(protoType ==  1);
        // flag == 'oraclesv'
        flag = TokenProto.getProtoFlag(outputScript, dataLen);
        require(flag == b'6f7261636c657376');

        bytes output = Util.buildOutput(outputScript, outputSatoshi);
        bytes hashOutput = hash256(output);
        require(hashOutput == Util.hashOutputs(txPreimage));
    }
}